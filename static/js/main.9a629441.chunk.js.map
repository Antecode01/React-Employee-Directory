{"version":3,"sources":["components/Navbar/index.js","components/ReaFooter/index.js","components/Main/MainArea/Headings/index.js","components/Main/MainArea/Table/index.js","components/Search/Searchbar/index.js","components/Search/index.js","utils/API.js","components/Main/MainArea/index.js","components/Main/index.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","Footer","Headings","props","headings","map","hname","width","key","style","data-key","cursor","onClick","handleSort","Table","users","undefined","name","login","picture","phone","email","dob","uuid","src","medium","alt","first","last","href","target","date","newDate","slice","YYYY","formatDate","Searchbar","handleInputChange","type","placeholder","aria-label","onChange","Search","axios","get","DataArea","state","search","filteredUsers","sort","event","newSearch","value","toLowerCase","setState","console","log","filtered","filter","item","includes","sortedUsers","attributes","getNamedItem","a","b","reverse","reverseSort","API","then","response","data","results","this","Component","Main","MainArea","App","ReaFooter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yVAWeA,MARf,WACE,OACE,yBAAKC,UAAU,8CACb,0BAAMA,UAAU,2BAAhB,wB,MCSSC,MAZf,WACE,OACE,4BAAQD,UAAU,oCAChB,yBAAKA,UAAU,eACb,2BAAOA,UAAU,sBAAjB,2C,kCCsBOE,MA1Bf,SAAkBC,GAChB,OACE,2BAAOH,UAAU,cACf,4BACGG,EAAMC,SAASC,KAAI,YAAuB,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAC5B,OACE,wBAAIP,UAAU,MAAMQ,IAAKF,EAAOG,MAAO,CAAEF,UACtCD,EAAO,IACPA,EACC,uBACEN,UAAU,cACVU,WAAUJ,EACVG,MAAO,CAAEE,OAAQ,WACjBC,QAAST,EAAMU,aAGjB,U,MC0BDC,MA1Cf,YAA2B,IAAVC,EAAS,EAATA,MAUf,OACE,oCACgBC,IAAbD,EAAM,SAAsCC,IAAlBD,EAAM,GAAGE,KAClCF,EAAMV,KAAI,YAAkD,IAA/CY,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,QAASC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC/C,OACE,wBAAId,IAAKU,EAAMK,MACb,wBAAIvB,UAAU,gBACZ,yBACEwB,IAAKL,EAAQM,OACbC,IAAI,UACJ1B,UAAU,wBAGd,wBAAIA,UAAU,0BACXiB,EAAKU,MADR,IACgBV,EAAKW,MAErB,wBAAI5B,UAAU,gBAAgBoB,GAC9B,wBAAIpB,UAAU,gBACZ,uBAAG6B,KAAM,UAAYR,EAAOS,OAAO,WAChCT,IAGL,wBAAIrB,UAAU,gBA/B1B,SAAoB+B,GAClB,IAAMC,EAAUD,EAAKE,MAAM,EAAG,IACxBC,EAAOF,EAAQC,MAAM,EAAG,GAI9B,OAHWD,EAAQC,MAAM,EAAG,GAED,IADhBD,EAAQC,MAAM,EAAG,IACU,IAAMC,EA0BJC,CAAWb,EAAIS,WAKnD,uC,MCZOK,MAzBf,YAA2C,IAAtBC,EAAqB,EAArBA,kBACnB,OACE,yBAAKrC,UAAU,kBACb,yBAAKA,UAAU,qCACb,0BAAMA,UAAU,yCACd,2BACEA,UAAU,eACVsC,KAAK,SACLC,YAAY,SACZC,aAAW,SACXC,SAAUJ,IAEZ,4BACErC,UAAU,+BACVsC,KAAK,SACL1B,QAASyB,GAET,uBAAGrC,UAAU,uBCbV0C,MAJf,YAAwC,IAAtBL,EAAqB,EAArBA,kBAChB,OAAO,kBAAC,EAAD,CAAWA,kBAAmBA,K,iBCAxB,EACH,WACR,OAAOM,IAAMC,IAAN,6CAJK,GAIL,aCkIIC,E,4MAjIbC,MAAQ,CACNC,OAAQ,GACRhC,MAAO,CAAC,IACRiC,cAAe,CAAC,IAChBC,KAAM,W,EAGR7C,SAAW,CACT,CAAEE,MAAO,GAAIC,MAAO,MAAO0C,KAAM,WACjC,CAAE3C,MAAO,OAAQC,MAAO,MAAO0C,KAAM,WACrC,CAAE3C,MAAO,QAASC,MAAO,MAAO0C,KAAM,WACtC,CAAE3C,MAAO,QAASC,MAAO,MAAO0C,KAAM,WACtC,CAAE3C,MAAO,MAAOC,MAAO,MAAO0C,KAAM,Y,EAatCZ,kBAAoB,SAACa,GAEnB,IAAMC,EAAYD,EAAMpB,OAAOsB,MAAMC,cAErC,EAAKC,SAAS,CAAEP,OAAQI,IAExB,IAAMpC,EAAQ,EAAK+B,MAAM/B,MACzBwC,QAAQC,IAAIzC,GAEZ,IAAM0C,EAAW1C,EAAM2C,QACrB,SAACC,GAAD,OACEA,EAAK1C,KAAKU,MAAM0B,cAAcO,SAAST,IACvCQ,EAAK1C,KAAKW,KAAKyB,cAAcO,SAAST,IACtCQ,EAAKvC,MAAMwC,SAAST,IACpBQ,EAAKrC,IAAIS,KAAKE,MAAM,EAAG,IAAI2B,SAAST,MAGxC,EAAKG,SAAS,CAAEN,cAAeS,K,EAIjC5C,WAAa,SAACqC,GACZ,IAAMnC,EAAQ,EAAK+B,MAAM/B,MACzBwC,QAAQC,IAAIzC,GAGZ,IAgBI8C,EAhBAvD,EAAQ4C,EAAMpB,OAAOgC,WACtBC,aAAa,YACbX,MAAMC,cACTE,QAAQC,IAAIlD,GAGY,YAApB,EAAKwC,MAAMG,KACb,EAAKK,SAAS,CACZL,KAAM,WAGR,EAAKK,SAAS,CACZL,KAAM,YAORY,EADY,SAAVvD,EACYS,EAAMkC,MAAK,SAACe,EAAGC,GAC3B,OAAID,EAAE/C,KAAKU,MAAQsC,EAAEhD,KAAKU,OAChB,EAENqC,EAAE/C,KAAKU,MAAQsC,EAAEhD,KAAKU,MACjB,EAEF,KAGU,QAAVrB,EACKS,EAAMkC,MAAK,SAACe,EAAGC,GAC3B,OAAID,EAAE1C,IAAIS,KAAOkC,EAAE3C,IAAIS,MACb,EAENiC,EAAE1C,IAAIS,KAAOkC,EAAE3C,IAAIS,KACd,EAEF,KAIKhB,EAAMkC,MAAK,SAACe,EAAGC,GAC3B,OAAID,EAAE1D,GAAS2D,EAAE3D,IACP,EAEN0D,EAAE1D,GAAS2D,EAAE3D,GACR,EAEF,KAKa,YAApB,EAAKwC,MAAMG,MAOf,SAAqBY,GACZA,EAAYK,UAPnBC,CAAYN,GAId,EAAKP,SAAS,CAAEN,cAAea,K,kEA9FZ,IAAD,OAClBO,IAAeC,MAAK,SAACC,GACnB,EAAKhB,SAAS,CACZvC,MAAOuD,EAASC,KAAKC,QACrBxB,cAAesB,EAASC,KAAKC,e,+BAkGjC,OACE,oCACE,kBAAC,EAAD,CAAQnC,kBAAmBoC,KAAKpC,oBAChC,2BAAOrC,UAAU,wCACf,kBAAC,EAAD,CAAUI,SAAUqE,KAAKrE,SAAUS,WAAY4D,KAAK5D,aACpD,kBAAC,EAAD,CAAOE,MAAO0D,KAAK3B,MAAME,sB,GA3HZ0B,aCHFC,E,uKAEjB,OACE,oCACE,kBAACC,EAAD,W,GAJ0BF,aCYnBG,MAVf,WACE,OACE,oCACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAACC,EAAD,QCEcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtB,MAAK,SAAAuB,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxC,QAAQwC,MAAMA,EAAMC,c","file":"static/js/main.9a629441.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-warning navbar-bg bg-warning\">\r\n      <span className=\"navbar-brand mx-auto h1\">Employee Directory</span>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer className=\"text-center fixed-bottom bg-dark\">\r\n      <div className=\"card-footer\">\r\n        <small className=\"text-white mx-auto\">\r\n          &copy; 2020 â€¢ All Rights Reserved\r\n        </small>\r\n      </div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Headings(props) {\r\n  return (\r\n    <thead className=\"thead-dark\">\r\n      <tr>\r\n        {props.headings.map(({ hname, width }) => {\r\n          return (\r\n            <th className=\"col\" key={hname} style={{ width }}>\r\n              {hname}{\" \"}\r\n              {hname ? (\r\n                <i\r\n                  className=\"fas fa-sort\"\r\n                  data-key={hname}\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={props.handleSort}\r\n                ></i>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </th>\r\n          );\r\n        })}\r\n      </tr>\r\n    </thead>\r\n  );\r\n}\r\n\r\nexport default Headings;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Table({ users }) {\r\n  function formatDate(date) {\r\n    const newDate = date.slice(0, 10);\r\n    const YYYY = newDate.slice(0, 4);\r\n    const MM = newDate.slice(5, 7);\r\n    const DD = newDate.slice(8, 10);\r\n    const formattedDate = MM + \"/\" + DD + \"/\" + YYYY;\r\n    return formattedDate;\r\n  }\r\n\r\n  return (\r\n    <tbody>\r\n      {users[0] !== undefined && users[0].name !== undefined ? (\r\n        users.map(({ name, login, picture, phone, email, dob }) => {\r\n          return (\r\n            <tr key={login.uuid}>\r\n              <td className=\"align-middle\">\r\n                <img\r\n                  src={picture.medium}\r\n                  alt=\"profile\"\r\n                  className=\"img img-responsive\"\r\n                />\r\n              </td>\r\n              <td className=\"name-cell align-middle\">\r\n                {name.first} {name.last}\r\n              </td>\r\n              <td className=\"align-middle\">{phone}</td>\r\n              <td className=\"align-middle\">\r\n                <a href={\"mailto:\" + email} target=\"__blank\">\r\n                  {email}\r\n                </a>\r\n              </td>\r\n              <td className=\"align-middle\">{formatDate(dob.date)}</td>\r\n            </tr>\r\n          );\r\n        })\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </tbody>\r\n  );\r\n}\r\nexport default Table;\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Searchbar({ handleInputChange }) {\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <div className=\"row col-12 justify-content-center\">\r\n        <form className=\"form-inline input-group p-2 searchbar\">\r\n          <input\r\n            className=\"form-control\"\r\n            type=\"search\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"Search\"\r\n            onChange={handleInputChange}\r\n          />\r\n          <button\r\n            className=\"btn btn-outline-success ml-2\"\r\n            type=\"submit\"\r\n            onClick={handleInputChange}\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from \"react\";\r\nimport Searchbar from \"./Searchbar\";\r\n\r\nfunction Search({ handleInputChange }) {\r\n  return <Searchbar handleInputChange={handleInputChange} />;\r\n}\r\n\r\nexport default Search;\r\n","import axios from \"axios\";\r\n\r\nconst results = 20;\r\n\r\nexport default {\r\n  getUsers: function () {\r\n    return axios.get(`https://randomuser.me/api/?results=${results}&nat=us`);\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Headings from \"./Headings\";\r\nimport Table from \"./Table\";\r\nimport Search from \"../../Search\";\r\nimport API from \"../../../utils/API\";\r\n\r\nclass DataArea extends Component {\r\n  state = {\r\n    search: \"\",\r\n    users: [{}],\r\n    filteredUsers: [{}],\r\n    sort: \"descend\",\r\n  };\r\n\r\n  headings = [\r\n    { hname: \"\", width: \"10%\", sort: \"descend\" },\r\n    { hname: \"Name\", width: \"25%\", sort: \"descend\" },\r\n    { hname: \"Phone\", width: \"20%\", sort: \"descend\" },\r\n    { hname: \"Email\", width: \"20%\", sort: \"descend\" },\r\n    { hname: \"DOB\", width: \"20%\", sort: \"descend\" },\r\n  ];\r\n\r\n  componentDidMount() {\r\n    API.getUsers().then((response) => {\r\n      this.setState({\r\n        users: response.data.results,\r\n        filteredUsers: response.data.results,\r\n      });\r\n    });\r\n  }\r\n\r\n  // handles input field when typing\r\n  handleInputChange = (event) => {\r\n    // grabs search value entered in input field\r\n    const newSearch = event.target.value.toLowerCase();\r\n    // updates the search state\r\n    this.setState({ search: newSearch });\r\n    // current user list\r\n    const users = this.state.users;\r\n    console.log(users);\r\n    // filters users to those containing search values\r\n    const filtered = users.filter(\r\n      (item) =>\r\n        item.name.first.toLowerCase().includes(newSearch) ||\r\n        item.name.last.toLowerCase().includes(newSearch) ||\r\n        item.phone.includes(newSearch) ||\r\n        item.dob.date.slice(0, 10).includes(newSearch)\r\n    );\r\n    // updates the filtered users\r\n    this.setState({ filteredUsers: filtered });\r\n  };\r\n\r\n  // handles sorting when clicking on sort icon\r\n  handleSort = (event) => {\r\n    const users = this.state.users;\r\n    console.log(users);\r\n\r\n    // grabs the column heading of the\r\n    let hname = event.target.attributes\r\n      .getNamedItem(\"data-key\")\r\n      .value.toLowerCase();\r\n    console.log(hname);\r\n\r\n    // updates the state of sort it its opposite state\r\n    if (this.state.sort === \"descend\") {\r\n      this.setState({\r\n        sort: \"ascend\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        sort: \"descend\",\r\n      });\r\n    }\r\n\r\n    let sortedUsers;\r\n    // if sorting on the name column, need to drill down to users.name.first\r\n    if (hname === \"name\") {\r\n      sortedUsers = users.sort((a, b) => {\r\n        if (a.name.first < b.name.first) {\r\n          return -1;\r\n        }\r\n        if (a.name.first > b.name.first) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      // if sorting on the name column, need to drill down to users.dob.date\r\n    } else if (hname === \"dob\") {\r\n      sortedUsers = users.sort((a, b) => {\r\n        if (a.dob.date < b.dob.date) {\r\n          return -1;\r\n        }\r\n        if (a.dob.date > b.dob.date) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n      // otherwise, we can just use the heading name to find the property to sort on\r\n    } else {\r\n      sortedUsers = users.sort((a, b) => {\r\n        if (a[hname] < b[hname]) {\r\n          return -1;\r\n        }\r\n        if (a[hname] > b[hname]) {\r\n          return 1;\r\n        }\r\n        return 0;\r\n      });\r\n    }\r\n\r\n    // simply reverse the sort in one of the cases\r\n    if (this.state.sort === \"descend\") {\r\n      reverseSort(sortedUsers);\r\n    }\r\n\r\n    // set the state to be the sortedusers which will re-render the display\r\n    this.setState({ filteredUsers: sortedUsers });\r\n\r\n    function reverseSort(sortedUsers) {\r\n      return sortedUsers.reverse();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <Search handleInputChange={this.handleInputChange} />\r\n        <table className=\"table table-striped table-hover mt-5\">\r\n          <Headings headings={this.headings} handleSort={this.handleSort} />\r\n          <Table users={this.state.filteredUsers} />\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DataArea;\r\n","import React, { Component } from \"react\";\r\nimport MainArea from \"./MainArea\";\r\n\r\nexport default class Main extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <MainArea />\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\nimport Navbar from \"./components/Navbar\";\nimport ReaFooter from \"./components/ReaFooter\";\nimport Main from \"./components/Main\";\n\nfunction App() {\n  return (\n    <>\n      <Navbar />\n      <Main />\n      <ReaFooter />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}